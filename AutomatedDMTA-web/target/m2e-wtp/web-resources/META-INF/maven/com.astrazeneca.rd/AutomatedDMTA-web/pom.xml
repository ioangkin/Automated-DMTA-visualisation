<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.astrazeneca.rd</groupId>
		<artifactId>AutomatedDMTA</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>AutomatedDMTA-web</artifactId>
	<name>AutomatedDMTA-web</name>
	<packaging>war</packaging>

	<scm>
		<url>${parent.scm.url}/AutomatedDMTA-web</url>
		<developerConnection>${parent.scm.developerConnection}</developerConnection>
	</scm>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.astrazeneca.rd</groupId>
			<version>0.0.1-SNAPSHOT</version>
			<artifactId>AutomatedDMTA-services</artifactId>
		</dependency>

		<!-- JAX-RS Dependencies -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0</version>
		</dependency>
		
		<!-- JAX-RS application servlet	-->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>

	<!-- 	<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${jersey.version}</version>
		</dependency> -->
		
		<dependency>
 			 <groupId>org.glassfish.jersey.media</groupId>
 			 <artifactId>jersey-media-json-jackson</artifactId>
 			 <version>${jersey.version}</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- Jersey Spring bridge to allow spring resources to be used from REST resources -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-spring3</artifactId>
			<version>${jersey.version}</version>
		</dependency>

		<!-- url rewrite to support HTML5 mode -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>4.0.4</version>
		</dependency>
		
		<dependency>
		<groupId>com.owlike</groupId>
		<artifactId>genson</artifactId>
			<version>0.99</version>
		</dependency>

		<!-- Integration Testing -->
		<dependency>
			<groupId>net.sourceforge.htmlunit</groupId>
			<artifactId>htmlunit</artifactId>
			<version>2.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
			<scope>test</scope>
		</dependency>
	
	</dependencies>

	<build>
		<finalName>AutomatedDMTA-web</finalName>
		<plugins>

			<!-- Facilitates downloading source and javadoc in Eclipse -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>	
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>					
				</configuration>
			</plugin>

 			<!-- Jetty plugin for embedded container -->
 			<!--
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.0.4.v20130625</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-servlets</artifactId>
						<version>9.0.4.v20130625</version>
					</dependency>
				</dependencies>
			</plugin>

			Tomcat plugin for embedded container
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<path>/</path>
				</configuration>
			</plugin>			

			CARGO config for Integration Testing
			<plugin>
				The Cargo plugin manages the Servlet engine
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<executions>
					start engine before tests
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					stop engine after tests
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					the actual configuration for the webapp
					<configuration>
						pick some port likely to be free, 
							 it has be matched in the test definitions
						<properties>
							<cargo.servlet.port>9090</cargo.servlet.port>
						</properties>
					</configuration>
					
					we use a Jetty 9. Alternatives are jetty9x, tomcat7x
					<container>
						<containerId>jetty9x</containerId>
						<type>embedded</type>
					</container>

					<deployables>
						<deployable>
							<properties>
								<context>/</context>
							</properties>
						</deployable>
					</deployables>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
						<version>1.5.8</version>
					</dependency>
				
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
						<version>1.5.8</version>
					</dependency>
				
					<dependency>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
						<version>1.5.8</version>
					</dependency>
				
					<dependency>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
						<version>1.2.16</version>
					</dependency>						 
				</dependencies>
			</plugin> -->

			<!-- SKIP UNTIL PROFILES ARE ADDED TO ALLOW IT TO WORK WITH JETTY AND TOMCAT 
			<plugin>
									the running in the normal test phase of the lifecycle 				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>true</skip> 						</configuration>
					</execution>
				</executions>
			</plugin>
			-->	
		</plugins>
	</build>
</project>
